/*
Copyright 2024 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha6

import (
	v1 "k8s.io/api/core/v1"
	v1alpha6 "sigs.k8s.io/cluster-api-provider-openstack/api/v1alpha6"
	v1beta1 "sigs.k8s.io/cluster-api/api/v1beta1"
	errors "sigs.k8s.io/cluster-api/errors"
)

// OpenStackMachineStatusApplyConfiguration represents an declarative configuration of the OpenStackMachineStatus type for use
// with apply.
type OpenStackMachineStatusApplyConfiguration struct {
	Ready          *bool                      `json:"ready,omitempty"`
	Addresses      []v1.NodeAddress           `json:"addresses,omitempty"`
	InstanceState  *v1alpha6.InstanceState    `json:"instanceState,omitempty"`
	FailureReason  *errors.MachineStatusError `json:"failureReason,omitempty"`
	FailureMessage *string                    `json:"failureMessage,omitempty"`
	Conditions     *v1beta1.Conditions        `json:"conditions,omitempty"`
}

// OpenStackMachineStatusApplyConfiguration constructs an declarative configuration of the OpenStackMachineStatus type for use with
// apply.
func OpenStackMachineStatus() *OpenStackMachineStatusApplyConfiguration {
	return &OpenStackMachineStatusApplyConfiguration{}
}

// WithReady sets the Ready field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Ready field is set to the value of the last call.
func (b *OpenStackMachineStatusApplyConfiguration) WithReady(value bool) *OpenStackMachineStatusApplyConfiguration {
	b.Ready = &value
	return b
}

// WithAddresses adds the given value to the Addresses field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Addresses field.
func (b *OpenStackMachineStatusApplyConfiguration) WithAddresses(values ...v1.NodeAddress) *OpenStackMachineStatusApplyConfiguration {
	for i := range values {
		b.Addresses = append(b.Addresses, values[i])
	}
	return b
}

// WithInstanceState sets the InstanceState field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the InstanceState field is set to the value of the last call.
func (b *OpenStackMachineStatusApplyConfiguration) WithInstanceState(value v1alpha6.InstanceState) *OpenStackMachineStatusApplyConfiguration {
	b.InstanceState = &value
	return b
}

// WithFailureReason sets the FailureReason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureReason field is set to the value of the last call.
func (b *OpenStackMachineStatusApplyConfiguration) WithFailureReason(value errors.MachineStatusError) *OpenStackMachineStatusApplyConfiguration {
	b.FailureReason = &value
	return b
}

// WithFailureMessage sets the FailureMessage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FailureMessage field is set to the value of the last call.
func (b *OpenStackMachineStatusApplyConfiguration) WithFailureMessage(value string) *OpenStackMachineStatusApplyConfiguration {
	b.FailureMessage = &value
	return b
}

// WithConditions sets the Conditions field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Conditions field is set to the value of the last call.
func (b *OpenStackMachineStatusApplyConfiguration) WithConditions(value v1beta1.Conditions) *OpenStackMachineStatusApplyConfiguration {
	b.Conditions = &value
	return b
}
