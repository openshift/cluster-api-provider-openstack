/*
Copyright 2024 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha6

// SecurityGroupFilterApplyConfiguration represents an declarative configuration of the SecurityGroupFilter type for use
// with apply.
type SecurityGroupFilterApplyConfiguration struct {
	ID          *string `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	TenantID    *string `json:"tenantId,omitempty"`
	ProjectID   *string `json:"projectId,omitempty"`
	Limit       *int    `json:"limit,omitempty"`
	Marker      *string `json:"marker,omitempty"`
	SortKey     *string `json:"sortKey,omitempty"`
	SortDir     *string `json:"sortDir,omitempty"`
	Tags        *string `json:"tags,omitempty"`
	TagsAny     *string `json:"tagsAny,omitempty"`
	NotTags     *string `json:"notTags,omitempty"`
	NotTagsAny  *string `json:"notTagsAny,omitempty"`
}

// SecurityGroupFilterApplyConfiguration constructs an declarative configuration of the SecurityGroupFilter type for use with
// apply.
func SecurityGroupFilter() *SecurityGroupFilterApplyConfiguration {
	return &SecurityGroupFilterApplyConfiguration{}
}

// WithID sets the ID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ID field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithID(value string) *SecurityGroupFilterApplyConfiguration {
	b.ID = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithName(value string) *SecurityGroupFilterApplyConfiguration {
	b.Name = &value
	return b
}

// WithDescription sets the Description field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Description field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithDescription(value string) *SecurityGroupFilterApplyConfiguration {
	b.Description = &value
	return b
}

// WithTenantID sets the TenantID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TenantID field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithTenantID(value string) *SecurityGroupFilterApplyConfiguration {
	b.TenantID = &value
	return b
}

// WithProjectID sets the ProjectID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProjectID field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithProjectID(value string) *SecurityGroupFilterApplyConfiguration {
	b.ProjectID = &value
	return b
}

// WithLimit sets the Limit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Limit field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithLimit(value int) *SecurityGroupFilterApplyConfiguration {
	b.Limit = &value
	return b
}

// WithMarker sets the Marker field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Marker field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithMarker(value string) *SecurityGroupFilterApplyConfiguration {
	b.Marker = &value
	return b
}

// WithSortKey sets the SortKey field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SortKey field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithSortKey(value string) *SecurityGroupFilterApplyConfiguration {
	b.SortKey = &value
	return b
}

// WithSortDir sets the SortDir field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SortDir field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithSortDir(value string) *SecurityGroupFilterApplyConfiguration {
	b.SortDir = &value
	return b
}

// WithTags sets the Tags field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Tags field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithTags(value string) *SecurityGroupFilterApplyConfiguration {
	b.Tags = &value
	return b
}

// WithTagsAny sets the TagsAny field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the TagsAny field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithTagsAny(value string) *SecurityGroupFilterApplyConfiguration {
	b.TagsAny = &value
	return b
}

// WithNotTags sets the NotTags field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NotTags field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithNotTags(value string) *SecurityGroupFilterApplyConfiguration {
	b.NotTags = &value
	return b
}

// WithNotTagsAny sets the NotTagsAny field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NotTagsAny field is set to the value of the last call.
func (b *SecurityGroupFilterApplyConfiguration) WithNotTagsAny(value string) *SecurityGroupFilterApplyConfiguration {
	b.NotTagsAny = &value
	return b
}
