/*
Copyright 2024 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha7

// AdditionalBlockDeviceApplyConfiguration represents an declarative configuration of the AdditionalBlockDevice type for use
// with apply.
type AdditionalBlockDeviceApplyConfiguration struct {
	Name    *string                               `json:"name,omitempty"`
	SizeGiB *int                                  `json:"sizeGiB,omitempty"`
	Storage *BlockDeviceStorageApplyConfiguration `json:"storage,omitempty"`
}

// AdditionalBlockDeviceApplyConfiguration constructs an declarative configuration of the AdditionalBlockDevice type for use with
// apply.
func AdditionalBlockDevice() *AdditionalBlockDeviceApplyConfiguration {
	return &AdditionalBlockDeviceApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *AdditionalBlockDeviceApplyConfiguration) WithName(value string) *AdditionalBlockDeviceApplyConfiguration {
	b.Name = &value
	return b
}

// WithSizeGiB sets the SizeGiB field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the SizeGiB field is set to the value of the last call.
func (b *AdditionalBlockDeviceApplyConfiguration) WithSizeGiB(value int) *AdditionalBlockDeviceApplyConfiguration {
	b.SizeGiB = &value
	return b
}

// WithStorage sets the Storage field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Storage field is set to the value of the last call.
func (b *AdditionalBlockDeviceApplyConfiguration) WithStorage(value *BlockDeviceStorageApplyConfiguration) *AdditionalBlockDeviceApplyConfiguration {
	b.Storage = value
	return b
}
